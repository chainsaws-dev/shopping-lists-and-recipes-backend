{"version":3,"file":"common.js","mappings":";;;;;;;;;;;;;;;;;;;AAQO,MAAM,SAAS;IACpB,YAAoB,IAAiB,EACjB,MAAc;QADd,SAAI,GAAJ,IAAI,CAAa;QACjB,WAAM,GAAN,MAAM,CAAQ;IAAI,CAAC;IACvC,WAAW,CACT,IAA4B,EAC5B,KAA0B;QAE1B,MAAM,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC,eAAe,EAAE,CAAC;QAE3C,IAAI,MAAM,EAAE;YACV,OAAO,IAAI,CAAC;SACb;aAAM;YACL,OAAO,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;SAC7C;IACH,CAAC;;kEAdU,SAAS;0GAAT,SAAS,WAAT,SAAS,mBAFR,MAAM;;;;;;;;;;;;;;;;;;;;;ACEb,MAAM,SAAS;IACpB,YAAoB,IAAiB,EACjB,MAAc;QADd,SAAI,GAAJ,IAAI,CAAa;QACjB,WAAM,GAAN,MAAM,CAAQ;IAAI,CAAC;IACvC,WAAW,CACT,IAA4B,EAC5B,KAA0B;QAE1B,4CAA4C;QAC5C,uBAAuB;QACvB,MAAM,YAAY,GAAG,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC;QAE5C,IAAI,YAAY,KAAK,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE,EAAE;YAC5C,OAAO,IAAI,CAAC;SACb;QAED,OAAO,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;IAE1C,CAAC;;kEAjBU,SAAS;0GAAT,SAAS,WAAT,SAAS,mBAFR,MAAM","sources":["./src/app/auth/auth.guard.ts","./src/app/auth/role.guard.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { AuthService } from './auth.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n  constructor(private auth: AuthService,\n              private router: Router) { }\n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n\n    const IsAuth = this.auth.CheckRegistered();\n\n    if (IsAuth) {\n      return true;\n    } else {\n      return this.router.createUrlTree(['/auth']);\n    }\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { AuthService } from './auth.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RoleGuard implements CanActivate {\n  constructor(private auth: AuthService,\n              private router: Router) { }\n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n\n    // this will be passed from the route config\n    // on the data property\n    const expectedRole = next.data.expectedRole;\n\n    if (expectedRole === this.auth.GetUserRole()) {\n      return true;\n    }\n\n    return this.router.createUrlTree(['/']);\n\n  }\n\n}\n"],"names":[],"sourceRoot":"webpack:///"}