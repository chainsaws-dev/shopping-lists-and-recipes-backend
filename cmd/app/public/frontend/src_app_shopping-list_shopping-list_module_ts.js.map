{"version":3,"file":"src_app_shopping-list_shopping-list_module_ts.js","mappings":"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","sources":["./src/app/shopping-list/shopping-edit/shopping-edit.component.ts","./src/app/shopping-list/shopping-edit/shopping-edit.component.html","./src/app/shopping-list/shopping-list.component.ts","./src/app/shopping-list/shopping-list.component.html","./src/app/shopping-list/shopping-list.module.ts"],"sourcesContent":["import { Component, OnInit, OnDestroy, ViewChild } from '@angular/core';\nimport { Ingredient } from '../../shared/shared.model';\nimport { ShoppingListService } from '../shopping-list.service';\nimport { NgForm } from '@angular/forms';\nimport { Subscription } from 'rxjs';\nimport { DataStorageService } from 'src/app/shared/data-storage.service';\n\n@Component({\n  selector: 'app-shopping-edit',\n  templateUrl: './shopping-edit.component.html',\n  styleUrls: ['./shopping-edit.component.css']\n})\nexport class ShoppingEditComponent implements OnInit, OnDestroy {\n  @ViewChild('f', { static: false }) slEditForm: NgForm;\n  private ingselected: Subscription;\n  selectedingredient: Ingredient;\n  editmode = false;\n\n  private IngUpd: Subscription;\n  private IngAdd: Subscription;\n  private IngDel: Subscription;\n  private IngCle: Subscription;\n\n  constructor(public ShopListServ: ShoppingListService, private DataServ: DataStorageService) { }\n\n  ngOnInit(): void {\n    this.ingselected = this.ShopListServ.IngredientSelected.subscribe(\n      (ing: Ingredient) => {\n        this.selectedingredient = ing;\n        this.editmode = true;\n        this.slEditForm.setValue({\n          name: this.selectedingredient.Name,\n          amount: this.selectedingredient.Amount\n        });\n      });\n\n    this.IngAdd = this.ShopListServ.IngredientAdded.subscribe(\n      (addedIng) => {\n        this.DataServ.SaveShoppingList(addedIng);\n      }\n    );\n    this.IngUpd = this.ShopListServ.IngredientUpdated.subscribe(\n      (updIng) => {\n        this.DataServ.SaveShoppingList(updIng);\n      }\n    );\n    this.IngDel = this.ShopListServ.IngredientDeleted.subscribe(\n      (delIng) => {\n        this.DataServ.DeleteShoppingList(delIng);\n      }\n    );\n    this.IngCle = this.ShopListServ.IngredientClear.subscribe(\n      () => {\n        this.DataServ.DeleteAllShoppingList();\n      }\n    );\n  }\n\n  ngOnDestroy(): void {\n    this.ingselected.unsubscribe();\n    this.IngAdd.unsubscribe();\n    this.IngUpd.unsubscribe();\n    this.IngDel.unsubscribe();\n    this.IngCle.unsubscribe();\n  }\n\n  AddNewItem(form: NgForm): void {\n    if (form.valid) {\n      const fvalue = form.value;\n      this.ShopListServ.AddNewItem(new Ingredient(fvalue.name, parseInt(fvalue.amount, 10)), false);\n    }\n  }\n\n  UpdateItem(form: NgForm): void {\n    if (form.valid) {\n      const fvalue = form.value;\n      this.ShopListServ.UpdateSelectedItem(new Ingredient(fvalue.name, parseInt(fvalue.amount, 10)));\n\n      this.editmode = false;\n      this.slEditForm.reset();\n    }\n  }\n\n  DeleteSelectedItem() {\n    this.ShopListServ.DeleteSelectedItem();\n  }\n\n  ClearAllItems() {\n    this.ShopListServ.ClearAll();\n  }\n}\n","<div class=\"row\">\n  <div class=\"col\">\n    <form (ngSubmit)=\"editmode ? UpdateItem(f) : AddNewItem(f)\" #f=\"ngForm\">\n      <div class=\"row\">\n        <div class=\"input-group mt-3\">\n          <div class=\"col-sm-9 form-group\">\n            <input type=\"text\" id=\"name\" placeholder=\"Name\" class=\"form-control\"\n            name=\"name\" ngModel required>\n          </div>\n          <div class=\"col form-group\">\n            <input type=\"number\" id=\"amount\" placeholder=\"Amount\" class=\"form-control\"\n            name=\"amount\" ngModel required pattern=\"^[1-9]+[0-9]*$\">\n          </div>\n        </div>\n      </div>\n      <div class=\"row\">\n        <div class=\"col\">\n          <div class=\"input-group\">\n            <div class=\"input-group-prepend\">\n              <button class=\"btn btn-outline-primary\" type=\"submit\" [disabled]=\"f.invalid\">{{ editmode ? 'Update' : 'Add'}}</button>\n              <button class=\"btn btn-outline-danger\" type=\"button\" (click)=\"DeleteSelectedItem()\" *ngIf=\"ShopListServ.CurrentSelectedItem\">Delete</button>\n              <button class=\"btn btn-outline-secondary\" type=\"button\" (click)=\"ClearAllItems()\" *ngIf=\"ShopListServ.GetIngredientsLength()!==0\">Clear</button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Component, OnInit, Input, OnDestroy } from '@angular/core';\nimport { Ingredient } from '../shared/shared.model';\nimport { ShoppingListService } from './shopping-list.service';\nimport { Subscription } from 'rxjs';\nimport { ActivatedRoute, Params, Router } from '@angular/router';\nimport { DataStorageService } from '../shared/data-storage.service';\nimport { environment } from 'src/environments/environment';\nimport { ErrorResponse } from '../shared/shared.model';\n\n@Component({\n  selector: 'app-shopping-list',\n  templateUrl: './shopping-list.component.html',\n  styleUrls: ['./shopping-list.component.css']\n})\nexport class ShoppingListComponent implements OnInit, OnDestroy {\n  ingredients: Ingredient[];\n  private IngChanged: Subscription;\n  private PageChanged: Subscription;\n  private FetchOnInint: Subscription;\n  private DataLoading: Subscription;\n\n  slCurrentPage: number;\n  slPageSize: number;\n  slcollectionSize: number;\n  IsLoading: boolean;\n\n  ShowMessage: boolean;\n  MessageType: string;\n  ResponseFromBackend: ErrorResponse;\n  RecivedErrorSub: Subscription;\n\n  private WatchIngAdd: Subscription;\n  private WatchIngDel: Subscription;\n  private WatchIngCle: Subscription;\n\n  constructor(\n    public ShopListServ: ShoppingListService,\n    private activeroute: ActivatedRoute,\n    private DataServ: DataStorageService,\n    private router: Router) { }\n\n\n  ngOnDestroy(): void {\n    this.IngChanged.unsubscribe();\n    this.PageChanged.unsubscribe();\n    this.FetchOnInint.unsubscribe();\n    this.DataLoading.unsubscribe();\n    this.RecivedErrorSub.unsubscribe();\n    this.WatchIngAdd.unsubscribe();\n    this.WatchIngDel.unsubscribe();\n    this.WatchIngCle.unsubscribe();\n  }\n\n  ngOnInit(): void {\n\n    this.slPageSize = environment.ShoppingListPageSize;\n\n    this.RecivedErrorSub = this.DataServ.RecivedError.subscribe(\n      (response) => {\n\n        this.ShowMessage = true;\n        this.ResponseFromBackend = response;\n        setTimeout(() => this.ShowMessage = false, 5000);\n\n        if (response) {\n          switch (response.Error.Code) {\n            case 200:\n              this.MessageType = 'success';\n              break;\n            default:\n              this.MessageType = 'danger';\n              break;\n          }\n        }\n      }\n    );\n\n    this.IngChanged = this.ShopListServ.IngredientChanged\n      .subscribe((ing: Ingredient[]) => {\n        this.ingredients = ing;\n      });\n\n    this.PageChanged = this.activeroute.params.subscribe((params: Params) => {\n      this.slCurrentPage = +params.pn;\n    });\n\n    this.DataLoading = this.DataServ.LoadingData.subscribe(\n      (State) => {\n        this.IsLoading = State;\n      }\n    );\n\n    this.FetchOnInint = this.DataServ.FetchShoppingList(this.slCurrentPage, environment.ShoppingListPageSize).subscribe(\n      (value) => {\n        this.ingredients = this.ShopListServ.GetIngredients();\n        this.slcollectionSize = this.ShopListServ.Total;\n      },\n      (error) => {\n        this.ingredients = [];\n      }\n    );\n\n    this.WatchIngAdd = this.ShopListServ.IngredientAdded.subscribe(\n      (newing) => {\n        this.slcollectionSize += 1;\n        this.ingredients = this.ShopListServ.GetIngredients();\n      }\n    );\n    this.WatchIngDel = this.ShopListServ.IngredientDeleted.subscribe(\n      (deling) => {\n        this.slcollectionSize -= 1;\n        this.ingredients = this.ShopListServ.GetIngredients();\n        if (this.ingredients.length === 0) {\n          this.slCurrentPage = this.GetPreviousPage(this.slCurrentPage);\n          this.ShopListServ.Total = this.slcollectionSize;\n          if (this.slcollectionSize !== 0) {\n            this.OnPageChanged(this.slCurrentPage);\n          }\n        }\n      }\n    );\n\n    this.WatchIngCle = this.ShopListServ.IngredientClear.subscribe(\n      () => {\n        this.slcollectionSize = 0;\n        this.ShopListServ.Total = this.slcollectionSize;\n      }\n    );\n  }\n\n  GetPreviousPage(page: number) {\n    if (page > 1) {\n      return page - 1;\n    } else {\n      return 1;\n    }\n  }\n\n  OnPageChanged(page: number) {\n    this.slCurrentPage = page;\n    this.FetchOnInint = this.DataServ.FetchShoppingList(page, environment.ShoppingListPageSize).subscribe(\n      () => {\n        this.ingredients = this.ShopListServ.GetIngredients();\n        this.router.navigate(['../', page.toString()], { relativeTo: this.activeroute });\n      }\n    );\n  }\n\n}\n","<div class=\"row\" *ngIf=\"!IsLoading\">\n  <div class=\"col\">\n    <app-shopping-edit></app-shopping-edit>\n    <hr>\n    <ngb-alert *ngIf=\"ShowMessage\" [type]=\"MessageType\" (close)=\"ShowMessage = false\">{{ ResponseFromBackend.Error.Message }}</ngb-alert>\n    <ul class=\"list-group mb-1\">\n      <a style=\"cursor: pointer;\" class=\"list-group-item list-group-item-action d-flex justify-content-between align-items-center\"\n        [ngClass]=\"ShopListServ.IsCurrentSelected(ingredient) ? 'active' : ''\"\n        *ngFor=\"let ingredient of ingredients\" (click)=\"ShopListServ.SelectItemShopList(ingredient)\">{{ ingredient.Name }}\n        <span class=\"badge badge-success badge-pill\">{{ingredient.Amount}}</span>\n      </a>\n    </ul>\n    <ngb-pagination *ngIf=\"slcollectionSize>slPageSize\"\n    [collectionSize]=\"slcollectionSize\"\n    [pageSize]=\"slPageSize\"\n    [page]=\"slCurrentPage\"\n    [rotate]=\"true\"\n    [boundaryLinks]=\"true\"\n    [maxSize]=\"11\"\n    (pageChange)=\"OnPageChanged($event)\"></ngb-pagination>\n  </div>\n</div>\n<div class=\"text-center\">\n  <div class=\"spinner-border\" role=\"status\" *ngIf=\"IsLoading\">\n    <span class=\"sr-only\">Loading...</span>\n  </div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ShoppingListComponent } from './shopping-list.component';\nimport { ShoppingEditComponent } from './shopping-edit/shopping-edit.component';\nimport { Routes, RouterModule } from '@angular/router';\nimport { FormsModule } from '@angular/forms';\nimport { NgbAlertModule, NgbPaginationModule } from '@ng-bootstrap/ng-bootstrap';\nimport { RoleGuard } from '../auth/role.guard';\n\nconst routes: Routes = [\n  { path: '', redirectTo: '1', pathMatch: 'full' },\n  { path: ':pn', component: ShoppingListComponent,  canActivate: [RoleGuard] , data: { expectedRole: 'admin_role_CRUD' } }\n];\n\n@NgModule({\n  declarations: [\n    ShoppingListComponent,\n    ShoppingEditComponent\n  ],\n  imports: [\n    CommonModule,\n    FormsModule,\n    NgbAlertModule,\n    NgbPaginationModule,\n    RouterModule.forChild(routes)\n  ]\n})\nexport class ShoppingListModule { }\n"],"names":[],"sourceRoot":"webpack:///"}