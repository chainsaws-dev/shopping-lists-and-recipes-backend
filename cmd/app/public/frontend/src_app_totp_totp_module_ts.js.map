{"version":3,"file":"src_app_totp_totp_module_ts.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;ICoBM,gFAAkF;IAA9B,uUAAuB,KAAK,IAAC;IAAC,uDAAuC;IAAA,4DAAY;;;IAAtG,oFAAoB;IAA+B,0DAAuC;IAAvC,yGAAuC;;;IAD3H,0EAA8C;IAC5C,mIAAqI;IACvI,4DAAM;;;IADQ,0DAAiB;IAAjB,oFAAiB;;;;IAnBjC,yEAAsE;IAE9D,wEAAa;IAAA,4DAAK;IAExB,yEAAuB;IACf,yWAAY,wBAAwB,IAAC;IACzC,yEAAoC;IAClC,uEAC+D;IACjE,4DAAM;IACN,0EAAoC;IAGI,iEAAK;IAAA,4DAAS;IAK1D,kHAEM;IACR,4DAAM;;;;IARQ,2DAA+B;IAA/B,iFAA+B;IAKhB,0DAAiB;IAAjB,oFAAiB;;;IAK5C,0EAA4D;IAClB,qEAAU;IAAA,4DAAO;;ADbxD,MAAM,aAAa;IAYxB,YACU,WAAwB,EACxB,MAAc;QADd,gBAAW,GAAX,WAAW,CAAa;QACxB,WAAM,GAAN,MAAM,CAAQ;QAZxB,cAAS,GAAG,IAAI,CAAC;QACjB,cAAS,GAAG,KAAK,CAAC;IAWU,CAAC;IAE7B,WAAW;QACT,IAAI,CAAC,WAAW,CAAC,WAAW,EAAE,CAAC;QAC/B,IAAI,CAAC,QAAQ,CAAC,WAAW,EAAE,CAAC;IAC9B,CAAC;IAED,QAAQ;QACN,IAAI,IAAI,CAAC,WAAW,CAAC,eAAe,EAAE,EAAE;YACtC,IAAI,CAAC,QAAQ,EAAE,CAAC;SACjB;QAED,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,SAAS,CAAC,CAAC,QAAuB,EAAE,EAAE;YAChF,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;YACxB,IAAI,CAAC,mBAAmB,GAAG,QAAQ,CAAC;YACpC,UAAU,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,WAAW,GAAG,KAAK,EAAE,IAAI,CAAC,CAAC;YAEjD,IAAI,QAAQ,EAAE;gBACZ,QAAQ,QAAQ,CAAC,KAAK,CAAC,IAAI,EAAE;oBAC3B,KAAK,GAAG;wBACN,IAAI,CAAC,WAAW,GAAG,SAAS,CAAC;wBAC7B,MAAM;oBACR;wBACE,IAAI,CAAC,WAAW,GAAG,QAAQ,CAAC;wBAC5B,MAAM;iBACT;aACF;YAED,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QACzB,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,SAAS,CAAC,CAAC,OAAgB,EAAE,EAAE;YAC7E,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;YACvB,IAAI,OAAO,EAAE;gBACX,IAAI,CAAC,QAAQ,EAAE,CAAC;aACjB;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAGD,YAAY,CAAC,UAAkB;QAE7B,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QAEtB,IAAI,CAAC,WAAW,CAAC,iBAAiB,CAAC,UAAU,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;QAE7D,UAAU,CAAC,KAAK,EAAE,CAAC;IAErB,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC;IACrC,CAAC;;0EAlEU,aAAa;2GAAb,aAAa;QCZ1B,yEAA+B;QAC7B,0GAqBM;QACN,yEAAyB;QACvB,yGAEM;QACR,4DAAM;;QA1B8C,0DAAgB;QAAhB,gFAAgB;QAuBvB,0DAAe;QAAf,+EAAe;;;;;;;;;;;;;;;;;;;;;;;ACvBf;AACQ;AACA;AACV;AACiC;AAC7B;;;AAEjD,MAAM,MAAM,GAAW;IACrB,EAAE,IAAI,EAAE,EAAE,EAAE,SAAS,EAAE,0DAAa,EAAE;CACvC,CAAC;AAaK,MAAM,UAAU;;oEAAV,UAAU;uGAAV,UAAU;2GATZ;YACP,yDAAY;YACZ,uDAAW;YACX,kEAAqB,CAAC,MAAM,CAAC;YAC7B,+DAAY;YACZ,sEAAc;YACd,wEAAgB;SACjB;mIAEU,UAAU,mBAVN,0DAAa,aAE1B,yDAAY;QACZ,uDAAW,6DAEX,+DAAY;QACZ,sEAAc;QACd,wEAAgB","sources":["./src/app/totp/totp.component.ts","./src/app/totp/totp.component.html","./src/app/totp/totp.module.ts"],"sourcesContent":["import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { Subscription } from 'rxjs';\nimport { AuthService } from '../auth/auth.service';\nimport { ErrorResponse } from '../shared/shared.model';\n\n@Component({\n  selector: 'app-totp',\n  templateUrl: './totp.component.html',\n  styleUrls: ['./totp.component.css']\n})\nexport class TotpComponent implements OnInit, OnDestroy {\n\n  LoginMode = true;\n  IsLoading = false;\n\n  private SfErrSub: Subscription;\n  private SfResultSub: Subscription;\n\n  ResponseFromBackend: ErrorResponse;\n  ShowMessage: boolean;\n  MessageType: string;\n\n  constructor(\n    private authservice: AuthService,\n    private router: Router) { }\n\n  ngOnDestroy(): void {\n    this.SfResultSub.unsubscribe();\n    this.SfErrSub.unsubscribe();\n  }\n\n  ngOnInit(): void {\n    if (this.authservice.CheckRegistered()) {\n      this.Redirect();\n    }\n\n    this.SfErrSub = this.authservice.SfErrorSub.subscribe((response: ErrorResponse) => {\n      this.ShowMessage = true;\n      this.ResponseFromBackend = response;\n      setTimeout(() => this.ShowMessage = false, 5000);\n\n      if (response) {\n        switch (response.Error.Code) {\n          case 200:\n            this.MessageType = 'success';\n            break;\n          default:\n            this.MessageType = 'danger';\n            break;\n        }\n      }\n\n      this.IsLoading = false;\n    });\n\n    this.SfResultSub = this.authservice.SfResultSub.subscribe((Success: boolean) => {\n      this.IsLoading = false;\n      if (Success) {\n        this.Redirect();\n      }\n    });\n  }\n\n\n  OnSubmitForm(SignupForm: NgForm) {\n\n    this.IsLoading = true;\n\n    this.authservice.SecondFactorCheck(SignupForm.value.passkey);\n\n    SignupForm.reset();\n\n  }\n\n  Redirect() {\n    this.router.navigate(['/recipes']);\n  }\n\n\n}\n","<div class=\"main-parent-login\">\n  <div class=\"card mx-auto\" style=\"margin-top: 3px;\" *ngIf=\"!IsLoading\">\n    <div class=\"card-header\">\n      <h3>Second factor</h3>\n    </div>\n    <div class=\"card-body\">\n      <form (ngSubmit)=\"OnSubmitForm(SignupForm)\" #SignupForm=\"ngForm\">\n        <div class=\"input-group form-group\">\n          <input type=\"text\" name=\"passkey\" inputmode=\"numeric\" pattern=\"[0-9]*\" autocomplete=\"one-time-code\" class=\"form-control mb-3\" placeholder=\"Passkey\" ngModel required\n            minlength='6' placement=\"right\" ngbTooltip=\"Minimum 6 chars\">\n        </div>\n        <div class=\"form-group float-right\">\n          <div class=\"input-group\">\n              <button type=\"submit\" class=\"btn btn-outline-primary\"\n                [disabled]=\"SignupForm.invalid\">Check</button>\n          </div>\n        </div>\n      </form>\n    </div>\n    <div style=\"padding: 3px\" *ngIf=\"ShowMessage\">\n      <ngb-alert *ngIf=\"ShowMessage\" [type]=\"MessageType\" (close)=\"ShowMessage = false\">{{ ResponseFromBackend.Error.Message }}</ngb-alert>\n    </div>\n  </div>\n  <div class=\"text-center\">\n    <div class=\"spinner-border\" role=\"status\" *ngIf=\"IsLoading\">\n      <span class=\"visually-hidden-focusable\">Loading...</span>\n    </div>\n  </div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { Routes, RouterModule } from '@angular/router';\nimport { SharedModule } from '../shared/shared.module';\nimport { FormsModule } from '@angular/forms';\nimport { NgbAlertModule, NgbTooltipModule } from '@ng-bootstrap/ng-bootstrap';\nimport { TotpComponent } from './totp.component';\n\nconst routes: Routes = [\n  { path: '', component: TotpComponent }\n];\n\n@NgModule({\n  declarations: [TotpComponent],\n  imports: [\n    CommonModule,\n    FormsModule,\n    RouterModule.forChild(routes),\n    SharedModule,\n    NgbAlertModule,\n    NgbTooltipModule\n  ]\n})\nexport class TotpModule { }\n"],"names":[],"sourceRoot":"webpack:///"}