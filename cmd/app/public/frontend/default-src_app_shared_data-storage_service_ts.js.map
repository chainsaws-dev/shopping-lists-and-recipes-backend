{"version":3,"file":"default-src_app_shared_data-storage_service_ts.js","mappings":"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","sources":["./src/app/admin/media/media.model.ts","./src/app/admin/media/media.service.ts","./src/app/admin/sessions/sessions.service.ts","./src/app/admin/users/users.model.ts","./src/app/admin/users/users.service.ts","./src/app/recipes/recipe-model.ts","./src/app/recipes/recipe.service.ts","./src/app/shared/data-storage.service.ts","./src/app/shared/shared.model.ts","./src/app/shopping-list/shopping-list.service.ts"],"sourcesContent":["export class FiLe {\n  public ID: number;\n  public Filename: string;\n  public Filesize: number;\n  public Filetype: string;\n  public FileID: string;\n  public PreviewID: string;\n\n  constructor(fname: string, fsize: number, ftype: string, flink: string, plink: string, ID: number) {\n    this.Filename = fname;\n    this.Filesize = fsize;\n    this.Filetype = ftype;\n    this.FileID = flink;\n    this.ID = ID;\n    this.PreviewID = plink;\n  }\n}\n\nexport class FilesResponse {\n  public Files: FiLe[];\n  public Total: number;\n  public Offset: number;\n  public Limit: number;\n}\n","import { Injectable } from '@angular/core';\nimport { FiLe } from './media.model';\nimport { Subject } from 'rxjs';\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MediaService {\n  FileSelected = new Subject<FiLe>();\n  FilesUpdated = new Subject<void>();\n  FilesInserted = new Subject<void>();\n  FilesDeleted = new Subject<void>();\n  FilesChanged = new Subject<FiLe>();\n\n  CurrentSelectedItem: FiLe;\n  Total: number;\n\n\n  private Files: FiLe[] = [];\n\n  constructor() { }\n\n  GetFiles() {\n    return this.Files.slice();\n  }\n\n  SetFiles(newfiles: FiLe[]) {\n    this.Files = newfiles;\n    this.FilesUpdated.next();\n  }\n\n  SetPagination(Total: number, Limit: number, Offset: number) {\n    this.Total = Total;\n  }\n\n  SelectItemFilesList(f: FiLe) {\n    this.CurrentSelectedItem = f;\n    this.FileSelected.next(f);\n  }\n\n  IsCurrentSelected(user: FiLe) {\n    return this.CurrentSelectedItem === user;\n  }\n\n  GetFileById(id: number) {\n\n    if (id < this.Files.length && id > 0) {\n      return this.Files[id];\n    } else {\n      return this.Files[0];\n    }\n  }\n\n  UpdateExistingFile(f: FiLe, Index: number) {\n    this.Files[Index] = f;\n    this.FilesChanged.next(f);\n  }\n\n  AddNewFile(f: FiLe) {\n\n    const nf = new FiLe(f.Filename, f.Filesize, f.Filetype, f.FileID, f.PreviewID, f.ID);\n\n    if (this.Files.length < environment.AdminUserListPageSize) {\n      this.Files.push(nf);\n    }\n\n    this.FilesChanged.next(nf);\n    this.FilesInserted.next();\n  }\n\n  DeleteFile(Index: number) {\n    this.Files.splice(Index, 1);\n    this.FilesDeleted.next();\n  }\n\n}\n\n","import { Injectable } from '@angular/core';\nimport { Session } from './sessions.model';\nimport { Subject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SessionsService {\n  SessionsUpdated = new Subject<void>();\n  SessionsInserted = new Subject<void>();\n  SessionsDeleted = new Subject<void>();\n  SessionsChanged = new Subject<Session>();\n  SessionsSelected = new Subject<Session>();\n\n  CurrentSelectedItem: Session;\n  Total: number;\n\n\n  private Sessions: Session[] = [];\n\n  constructor() { }\n\n  GetSessions() {\n    return this.Sessions.slice();\n  }\n\n  SetSessions(newsessions: Session[]) {\n    this.Sessions = newsessions;\n    this.SessionsUpdated.next();\n  }\n\n  SetPagination(Total: number, Limit: number, Offset: number) {\n    this.Total = Total;\n  }\n\n  SelectItemSessionsList(s: Session) {\n    this.CurrentSelectedItem = s;\n    this.SessionsSelected.next(s);\n  }\n\n  IsCurrentSelected(s: Session) {\n    return this.CurrentSelectedItem === s;\n  }\n\n  GetSessionById(id: number) {\n\n    if (id < this.Sessions.length && id > 0) {\n      return this.Sessions[id];\n    } else {\n      return this.Sessions[0];\n    }\n  }\n\n  DeleteSession(Index: number) {\n    this.Sessions.splice(Index, 1);\n    this.SessionsDeleted.next();\n  }\n\n}\n\n","export class User {\n  public GUID: string;\n  public Role: string;\n  public Email: string;\n  public Phone: string;\n  public Name: string;\n  public IsAdmin: boolean;\n  public Confirmed: boolean;\n  public SecondFactor: boolean;\n  public Disabled: boolean;\n  constructor(Role: string, Email: string, Phone: string, Name: string) {\n    this.GUID = '';\n    this.Role = Role;\n    this.Email = Email;\n    this.Phone = Phone;\n    this.Name = Name;\n    this.IsAdmin = false;\n    this.Confirmed = false;\n    this.SecondFactor = false;\n    this.Disabled = false;\n  }\n}\n\nexport class UsersResponse {\n  public Users: User[];\n  public Total: number;\n  public Offset: number;\n  public Limit: number;\n}\n\n","import { Injectable } from '@angular/core';\nimport { User } from './users.model';\nimport { Subject } from 'rxjs';\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UsersService {\n  UserSelected = new Subject<User>();\n  UsersUpdated = new Subject<void>();\n  UsersInserted = new Subject<void>();\n  UsersDeleted = new Subject<void>();\n  UsersChanged = new Subject<User>();\n\n  CurrentSelectedItem: User;\n  Total: number;\n\n\n  private Users: User[] = [];\n\n  constructor() { }\n\n  GetUsers() {\n    return this.Users.slice();\n  }\n\n  SetUsers(newusers: User[]) {\n    this.Users = newusers;\n    this.UsersUpdated.next();\n  }\n\n  SetPagination(Total: number, Limit: number, Offset: number) {\n    this.Total = Total;\n  }\n\n  SelectItemUsersList(ingredient: User) {\n    this.CurrentSelectedItem = ingredient;\n    this.UserSelected.next(ingredient);\n  }\n\n  IsCurrentSelected(user: User) {\n    return this.CurrentSelectedItem === user;\n  }\n\n  GetUserById(id: number) {\n\n    if (id < this.Users.length && id > 0) {\n      return this.Users[id];\n    } else {\n      return this.Users[0];\n    }\n  }\n\n  UpdateExistingUser(UserToUpdate: User, Index: number) {\n    this.Users[Index] = UserToUpdate;\n    this.UsersChanged.next(UserToUpdate);\n  }\n\n  AddNewUser(NewUser: User) {\n\n    const NewUserToAdd = new User(NewUser.Role, NewUser.Email, NewUser.Phone, NewUser.Name);\n\n    if (this.Users.length < environment.AdminUserListPageSize) {\n      this.Users.push(NewUserToAdd);\n    }\n\n    this.UsersChanged.next(NewUserToAdd);\n    this.UsersInserted.next();\n  }\n\n  DeleteUser(Index: number) {\n    this.Users.splice(Index, 1);\n    this.UsersDeleted.next();\n  }\n\n}\n\n","import { Ingredient } from '../shared/shared.model';\n\nexport class Recipe {\n  public ID: number;\n  public Name: string;\n  public Description: string;\n  public ImagePath: string;\n  public ImageDbID: number;\n  public Ingredients: Ingredient[];\n\n  constructor(name: string, desc: string, imagePath: string, ingredients: Ingredient[], ImageDBID: number, ID: number) {\n    this.Name = name;\n    this.Description = desc;\n    this.ImagePath = imagePath;\n    this.Ingredients = ingredients;\n    this.ImageDbID = ImageDBID;\n    this.ID = ID;\n  }\n}\n\nexport class RecipeResponse {\n  public Recipes: Recipe[];\n  public Total: number;\n  public Offset: number;\n  public Limit: number;\n}\n\n\n","import { Injectable, } from '@angular/core';\nimport { Recipe } from './recipe-model';\nimport { Pagination, Ingredient } from '../shared/shared.model';\nimport { ShoppingListService } from '../shopping-list/shopping-list.service';\nimport { Subject } from 'rxjs';\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RecipeService {\n  RecipeToEdit: Recipe;\n  CurrentSelectedItem: Ingredient;\n  IngredientSelected = new Subject<Ingredient>();\n  RecipeChanged = new Subject<Recipe>();\n  RecipesUpdated = new Subject<void>();\n  RecipesInserted = new Subject<void>();\n  RecipesDeleted = new Subject<void>();\n  CurrentPage: number;\n\n  // new Recipe('Test', 'Desc', '', [new Ingredient('Bread', 1)])\n  private recipes: Recipe[] = [];\n\n  constructor(private ShopList: ShoppingListService) { }\n\n  GetRecipes() {\n    return this.recipes.slice(0, environment.RecipePageSize);\n  }\n\n  GetRecipesLen() {\n    return this.recipes.length;\n  }\n\n  GetRecipeById(id: number) {\n    if (id < this.recipes.length && id > 0) {\n      return this.recipes[id];\n    } else {\n      return this.recipes[0];\n    }\n  }\n\n  GetRecipeId(recipe: Recipe): number {\n    return this.recipes.indexOf(recipe);\n  }\n\n  SendToShoppingList(RecipeIngredients: Ingredient[]) {\n    RecipeIngredients.forEach(element => {\n      this.ShopList.AddNewItem(element, true);\n    });\n  }\n\n  GetShoppingList() {\n    return this.ShopList.GetIngredients();\n  }\n\n  AddNewRecipe(NewRecipe: Recipe) {\n\n    const NewRecipeToAdd = new Recipe(NewRecipe.Name, NewRecipe.Description,\n      NewRecipe.ImagePath, NewRecipe.Ingredients, NewRecipe.ImageDbID, NewRecipe.ID);\n\n    if (this.recipes.length < environment.RecipePageSize) {\n      this.recipes.push(NewRecipeToAdd);\n    }\n\n    this.RecipeChanged.next(NewRecipeToAdd);\n    this.RecipesInserted.next();\n  }\n\n  UpdateExistingRecipe(RecipeToUpdate: Recipe, Index: number) {\n    this.recipes[Index] = RecipeToUpdate;\n    this.RecipeChanged.next(RecipeToUpdate);\n  }\n\n  SetRecipes(recipes: Recipe[]) {\n    this.recipes = recipes;\n    this.RecipesUpdated.next();\n  }\n\n  DeleteRecipe(Index: number) {\n    this.recipes.splice(Index, 1);\n    this.RecipesDeleted.next();\n  }\n\n  AddNewIngredient(NewIngredient: Ingredient) {\n    const FoundIngredient = this.RecipeToEdit.Ingredients.find((x) => x.Name === NewIngredient.Name);\n\n    if (FoundIngredient) {\n      FoundIngredient.Amount = FoundIngredient.Amount + NewIngredient.Amount;\n    } else {\n      this.RecipeToEdit.Ingredients.push(new Ingredient(NewIngredient.Name, NewIngredient.Amount));\n    }\n  }\n\n  UpdateSelectedIngredient(UpdatedIngredient: Ingredient) {\n\n    const FoundIngredient = this.RecipeToEdit.Ingredients.find((x) => x.Name === UpdatedIngredient.Name);\n\n    if (FoundIngredient && FoundIngredient !== this.CurrentSelectedItem) {\n      FoundIngredient.Name = UpdatedIngredient.Name;\n      FoundIngredient.Amount = FoundIngredient.Amount + UpdatedIngredient.Amount;\n      this.DeleteSelectedIngredient();\n    } else {\n      const FoundExact = this.RecipeToEdit.Ingredients.find((x) => x === this.CurrentSelectedItem);\n      if (FoundExact) {\n        FoundExact.Name = UpdatedIngredient.Name;\n        FoundExact.Amount = UpdatedIngredient.Amount;\n      }\n    }\n\n    this.CurrentSelectedItem = null;\n    this.IngredientSelected.next(this.CurrentSelectedItem);\n  }\n\n  DeleteSelectedIngredient() {\n    const index: number = this.RecipeToEdit.Ingredients.indexOf(this.CurrentSelectedItem);\n    if (index !== -1) {\n      this.RecipeToEdit.Ingredients.splice(index, 1);\n    }\n\n    this.CurrentSelectedItem = null;\n  }\n\n  ClearAllIngredients() {\n    this.RecipeToEdit.Ingredients = [];\n    this.CurrentSelectedItem = null;\n  }\n\n  GetIngredientsLength(): number {\n    return this.RecipeToEdit.Ingredients.length;\n  }\n\n  IngredientSelect(SelectedIngredient: Ingredient) {\n    this.CurrentSelectedItem = SelectedIngredient;\n    this.IngredientSelected.next(SelectedIngredient);\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpEventType } from '@angular/common/http';\nimport { RecipeService } from '../recipes/recipe.service';\nimport { Recipe, RecipeResponse } from '../recipes/recipe-model';\nimport { ErrorResponse, Pagination } from '../shared/shared.model';\nimport { FiLe, FilesResponse } from '../admin/media/media.model';\nimport { map, tap } from 'rxjs/operators';\nimport { environment } from '../../environments/environment';\nimport { Subject } from 'rxjs';\nimport { ShoppingListResponse, Ingredient } from './shared.model';\nimport { UsersResponse, User } from '../admin/users/users.model';\nimport { ShoppingListService } from '../shopping-list/shopping-list.service';\nimport { UsersService } from '../admin/users/users.service';\nimport { MediaService } from '../admin/media/media.service';\nimport { SessionsResponse } from '../admin/sessions/sessions.model';\nimport { SessionsService } from '../admin/sessions/sessions.service';\nimport { Session } from 'protractor';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DataStorageService {\n\n  LoadingData = new Subject<boolean>();\n  RecipesUpdateInsert = new Subject<Recipe>();\n  RecivedError = new Subject<ErrorResponse>();\n  PaginationSet = new Subject<Pagination>();\n  FileUploadProgress = new Subject<string>();\n  FileUploaded = new Subject<FiLe>();\n  UserUpdateInsert = new Subject<User>();\n\n  CurrentUserFetch = new Subject<User>();\n\n  TwoFactorSub = new Subject<User>();\n\n  LastPagination: Pagination;\n\n  Searched: boolean;\n\n  constructor(\n    private http: HttpClient,\n    private recipes: RecipeService,\n    private shoppinglist: ShoppingListService,\n    private users: UsersService,\n    private media: MediaService,\n    private sessions: SessionsService) { }\n\n  FetchRecipes(page: number, limit: number) {\n    this.LoadingData.next(true);\n\n    const httpOptions = {\n      headers: new HttpHeaders({\n        Page: page.toString(),\n        Limit: limit.toString()\n      })\n    };\n\n    return this.http\n      .get<RecipeResponse>(environment.GetSetRecipesUrl, httpOptions)\n      .pipe(map(recresp => {\n        recresp.Recipes = recresp.Recipes.map(recipe => {\n          return { ...recipe, Ingredients: recipe.Ingredients ? recipe.Ingredients : [] };\n        });\n\n        return recresp;\n      }),\n        tap(recresp => {\n          this.recipes.SetRecipes(recresp.Recipes);\n          this.PaginationSet.next(new Pagination(recresp.Total, recresp.Limit, recresp.Offset));\n          this.LoadingData.next(false);\n        }, (error) => {\n          const errresp = error.error as ErrorResponse;\n          this.RecivedError.next(errresp);\n          this.LoadingData.next(false);\n        }));\n  }\n\n  SearchRecipes(page: number, limit: number, search: string) {\n    this.LoadingData.next(true);\n\n    const httpOptions = {\n      headers: new HttpHeaders({\n        Page: page.toString(),\n        Limit: limit.toString(),\n        Search: search\n      })\n    };\n\n    return this.http\n      .get<RecipeResponse>(environment.SearchRecipesUrl, httpOptions)\n      .pipe(map(recresp => {\n        recresp.Recipes = recresp.Recipes.map(recipe => {\n          return { ...recipe, Ingredients: recipe.Ingredients ? recipe.Ingredients : [] };\n        });\n\n        return recresp;\n      }),\n        tap(recresp => {\n          this.recipes.SetRecipes(recresp.Recipes);\n          this.PaginationSet.next(new Pagination(recresp.Total, recresp.Limit, recresp.Offset));\n          this.LoadingData.next(false);\n        }, (error) => {\n          const errresp = error.error as ErrorResponse;\n          this.RecivedError.next(errresp);\n          this.LoadingData.next(false);\n        }));\n  }\n\n  SaveRecipe(RecipeToSave: Recipe) {\n    this.LoadingData.next(true);\n\n    this.http.post<Recipe>(environment.GetSetRecipesUrl, RecipeToSave)\n      .subscribe(response => {\n        this.RecipesUpdateInsert.next(response);\n        this.RecivedError.next(new ErrorResponse(200, 'Данные сохранены'));\n        this.LoadingData.next(false);\n      }, error => {\n        const errresp = error.error as ErrorResponse;\n        this.RecivedError.next(errresp);\n        this.LoadingData.next(false);\n      });\n  }\n\n  FetchFilesList(page: number, limit: number) {\n    this.LoadingData.next(true);\n\n    const httpOptions = {\n      headers: new HttpHeaders({\n        Page: page.toString(),\n        Limit: limit.toString()\n      })\n    };\n\n    return this.http\n      .get<FilesResponse>(environment.GetSetFileUrl, httpOptions)\n      .pipe(tap(recresp => {\n        this.media.SetFiles(recresp.Files);\n        this.media.SetPagination(recresp.Total, recresp.Limit, recresp.Offset);\n        this.LoadingData.next(false);\n      }, (error) => {\n        const errresp = error.error as ErrorResponse;\n        this.RecivedError.next(errresp);\n        this.LoadingData.next(false);\n      }));\n  }\n\n  FileUpload(FileToUpload: File) {\n    const formdatafile = new FormData();\n    formdatafile.append('file', FileToUpload, FileToUpload.name);\n    this.http.post(environment.GetSetFileUrl, formdatafile, {\n      headers: new HttpHeaders({\n\n      }),\n      reportProgress: true,\n      observe: 'events'\n    }).subscribe((curevent: any) => {\n      if (curevent.type === HttpEventType.UploadProgress) {\n        this.FileUploadProgress.next(String(curevent.loaded / curevent.total * 100));\n      } else if (curevent.type === HttpEventType.Response) {\n        if (curevent.ok) {\n          this.FileUploaded.next(curevent.body as FiLe);\n        }\n      }\n    }, error => {\n      const errresp = error.error as ErrorResponse;\n      this.RecivedError.next(errresp);\n      this.LoadingData.next(false);\n    }\n    );\n  }\n\n  DeleteFile(FileID: number, NoMessage: boolean) {\n    this.LoadingData.next(true);\n\n    const httpOptions = {\n      headers: new HttpHeaders({\n        FileID: FileID.toString()\n      })\n    };\n\n    this.http.delete<ErrorResponse>(environment.GetSetFileUrl, httpOptions)\n      .subscribe(response => {\n        if (!NoMessage) {\n          this.RecivedError.next(response);\n        }\n\n        this.LoadingData.next(false);\n      }, error => {\n        const errresp = error.error as ErrorResponse;\n        this.RecivedError.next(errresp);\n        this.LoadingData.next(false);\n      });\n  }\n\n  DeleteRecipe(RecipeToDelete: Recipe) {\n    this.LoadingData.next(true);\n\n    const httpOptions = {\n      headers: new HttpHeaders({\n        RecipeID: RecipeToDelete.ID.toString()\n      })\n    };\n\n    this.http.delete<ErrorResponse>(environment.GetSetRecipesUrl, httpOptions)\n      .subscribe(response => {\n        this.RecivedError.next(response);\n        this.LoadingData.next(false);\n        this.DeleteFile(RecipeToDelete.ImageDbID, true);\n      }, error => {\n        const errresp = error.error as ErrorResponse;\n        this.RecivedError.next(errresp);\n        this.LoadingData.next(false);\n      });\n  }\n\n\n  FetchShoppingList(page: number, limit: number) {\n    this.LoadingData.next(true);\n\n    const httpOptions = {\n      headers: new HttpHeaders({\n        Page: page.toString(),\n        Limit: limit.toString()\n      })\n    };\n\n    return this.http\n      .get<ShoppingListResponse>(environment.GetSetShoppingListUrl, httpOptions)\n      .pipe(tap(recresp => {\n        this.shoppinglist.SetIngredients(recresp.Items);\n        this.shoppinglist.SetPagination(recresp.Total, recresp.Limit, recresp.Offset);\n        this.LoadingData.next(false);\n      }, (error) => {\n        const errresp = error.error as ErrorResponse;\n        this.RecivedError.next(errresp);\n        this.LoadingData.next(false);\n      }));\n  }\n\n  SaveShoppingList(ItemToSave: Ingredient) {\n    this.LoadingData.next(true);\n\n    this.http.post<Recipe>(environment.GetSetShoppingListUrl, ItemToSave)\n      .subscribe(response => {\n        this.RecipesUpdateInsert.next(response);\n        this.RecivedError.next(new ErrorResponse(200, 'Данные сохранены'));\n        this.LoadingData.next(false);\n      }, error => {\n        const errresp = error.error as ErrorResponse;\n        this.RecivedError.next(errresp);\n        this.LoadingData.next(false);\n      });\n  }\n\n  DeleteShoppingList(IngredientToDelete: Ingredient) {\n    this.LoadingData.next(true);\n\n    const httpOptions = {\n      headers: new HttpHeaders({\n        IngName: encodeURI(IngredientToDelete.Name)\n      })\n    };\n\n    this.http.delete<ErrorResponse>(environment.GetSetShoppingListUrl, httpOptions)\n      .subscribe(response => {\n        this.RecivedError.next(response);\n        this.LoadingData.next(false);\n      }, error => {\n        const errresp = error.error as ErrorResponse;\n        this.RecivedError.next(errresp);\n        this.LoadingData.next(false);\n      });\n  }\n\n  DeleteAllShoppingList() {\n\n    this.http.delete<ErrorResponse>(environment.GetSetShoppingListUrl)\n      .subscribe(response => {\n        this.RecivedError.next(response);\n        this.LoadingData.next(false);\n      }, error => {\n        const errresp = error.error as ErrorResponse;\n        this.RecivedError.next(errresp);\n        this.LoadingData.next(false);\n      });\n  }\n\n  FetchSessionsList(page: number, limit: number) {\n\n    this.LoadingData.next(true);\n\n    const httpOptions = {\n      headers: new HttpHeaders({\n        Page: page.toString(),\n        Limit: limit.toString()\n      })\n    };\n\n    return this.http\n      .get<SessionsResponse>(environment.GetSetSessionsUrl, httpOptions)\n      .pipe(tap(recresp => {\n        this.sessions.SetSessions(recresp.Sessions);\n        this.sessions.SetPagination(recresp.Total, recresp.Limit, recresp.Offset);\n        this.LoadingData.next(false);\n      }, (error) => {\n        const errresp = error.error as ErrorResponse;\n        this.RecivedError.next(errresp);\n        this.LoadingData.next(false);\n      }));\n  }\n\n  DeleteSessionByToken(token: string) {\n    this.LoadingData.next(true);\n\n    const httpOptions = {\n      headers: new HttpHeaders({\n        Token: token\n      })\n    };\n\n    this.http.delete<ErrorResponse>(environment.GetSetSessionsUrl, httpOptions)\n      .subscribe(response => {\n        this.RecivedError.next(response);\n        this.LoadingData.next(false);\n      }, error => {\n        const errresp = error.error as ErrorResponse;\n        this.RecivedError.next(errresp);\n        this.LoadingData.next(false);\n      });\n  }\n\n  DeleteSessionByEmail(email: string) {\n    this.LoadingData.next(true);\n\n    const httpOptions = {\n      headers: new HttpHeaders({\n        Email: email\n      })\n    };\n\n    this.http.delete<ErrorResponse>(environment.GetSetSessionsUrl, httpOptions)\n      .subscribe(response => {\n        this.RecivedError.next(response);\n        this.LoadingData.next(false);\n      }, error => {\n        const errresp = error.error as ErrorResponse;\n        this.RecivedError.next(errresp);\n        this.LoadingData.next(false);\n      });\n  }\n\n  FetchUsersList(page: number, limit: number) {\n    this.LoadingData.next(true);\n\n    const httpOptions = {\n      headers: new HttpHeaders({\n        Page: page.toString(),\n        Limit: limit.toString()\n      })\n    };\n\n    return this.http\n      .get<UsersResponse>(environment.GetSetUsersUrl, httpOptions)\n      .pipe(tap(recresp => {\n        this.users.SetUsers(recresp.Users);\n        this.users.SetPagination(recresp.Total, recresp.Limit, recresp.Offset);\n        this.LoadingData.next(false);\n      }, (error) => {\n        const errresp = error.error as ErrorResponse;\n        this.RecivedError.next(errresp);\n        this.LoadingData.next(false);\n      }));\n  }\n\n  FetchCurrentUser() {\n    this.LoadingData.next(true);\n\n    return this.http.get<User>(environment.GetSetCurrentUserUrl)\n      .subscribe(response => {\n        this.CurrentUserFetch.next(response);\n        this.LoadingData.next(false);\n      }, error => {\n        const errresp = error.error as ErrorResponse;\n        this.RecivedError.next(errresp);\n        this.LoadingData.next(false);\n      });\n  }\n\n  SaveCurrentUser(ItemToSave: User, ChangePassword: boolean, NewPassword: string) {\n    this.LoadingData.next(true);\n\n    if (ItemToSave.GUID.length === 0) {\n      ItemToSave.GUID = '00000000-0000-0000-0000-000000000000';\n    }\n\n    this.GetObsForSaveCurrentUser(ItemToSave, ChangePassword, NewPassword)\n      .subscribe(response => {\n        this.UserUpdateInsert.next(response);\n        this.RecivedError.next(new ErrorResponse(200, 'Данные сохранены'));\n        this.LoadingData.next(false);\n      }, error => {\n        const errresp = error.error as ErrorResponse;\n        this.RecivedError.next(errresp);\n        this.LoadingData.next(false);\n      });\n  }\n\n  SaveUser(ItemToSave: User, ChangePassword: boolean, NewPassword: string) {\n    this.LoadingData.next(true);\n\n    if (ItemToSave.GUID.length === 0) {\n      ItemToSave.GUID = '00000000-0000-0000-0000-000000000000';\n    }\n\n    this.GetObsForSaveUser(ItemToSave, ChangePassword, NewPassword)\n      .subscribe(response => {\n        this.UserUpdateInsert.next(response);\n        this.RecivedError.next(new ErrorResponse(200, 'Данные сохранены'));\n        this.LoadingData.next(false);\n      }, error => {\n        const errresp = error.error as ErrorResponse;\n        this.RecivedError.next(errresp);\n        this.LoadingData.next(false);\n      });\n  }\n\n  LinkTwoFactor(Key: string, CurUser: User) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        Passcode: Key\n      })\n    };\n\n    this.http.post<ErrorResponse>(environment.TOTPSettingsUrl, CurUser, httpOptions)\n      .subscribe(response => {\n        CurUser.SecondFactor = true;\n        this.TwoFactorSub.next(CurUser);\n        this.RecivedError.next(response);\n        this.LoadingData.next(false);\n      }, error => {\n        const errresp = error.error as ErrorResponse;\n        this.RecivedError.next(errresp);\n        this.LoadingData.next(false);\n      });\n  }\n\n  UnlinkTwoFactor(CurUser: User) {\n    this.http.delete<ErrorResponse>(environment.TOTPSettingsUrl)\n      .subscribe(response => {\n        CurUser.SecondFactor = false;\n        this.TwoFactorSub.next(CurUser);\n        this.RecivedError.next(response);\n        this.LoadingData.next(false);\n      }, error => {\n        const errresp = error.error as ErrorResponse;\n        this.RecivedError.next(errresp);\n        this.LoadingData.next(false);\n      });\n  }\n\n  GetObsForSaveCurrentUser(ItemToSave: User, ChangePassword: boolean, NewPassword: string) {\n    if (ChangePassword) {\n      const httpOptions = {\n        headers: new HttpHeaders({\n          NewPassword: encodeURI(NewPassword)\n        })\n      };\n\n      return this.http.post<User>(environment.GetSetCurrentUserUrl, ItemToSave, httpOptions);\n    } else {\n      return this.http.post<User>(environment.GetSetCurrentUserUrl, ItemToSave);\n    }\n  }\n\n  GetObsForSaveUser(ItemToSave: User, ChangePassword: boolean, NewPassword: string) {\n    if (ChangePassword) {\n      const httpOptions = {\n        headers: new HttpHeaders({\n          NewPassword: encodeURI(NewPassword)\n        })\n      };\n\n      return this.http.post<User>(environment.GetSetUsersUrl, ItemToSave, httpOptions);\n    } else {\n      return this.http.post<User>(environment.GetSetUsersUrl, ItemToSave);\n    }\n  }\n\n  DeleteUser(UserToDelete: User) {\n    this.LoadingData.next(true);\n\n    const httpOptions = {\n      headers: new HttpHeaders({\n        UserID: encodeURI(UserToDelete.GUID)\n      })\n    };\n\n    this.http.delete<ErrorResponse>(environment.GetSetUsersUrl, httpOptions)\n      .subscribe(response => {\n        this.RecivedError.next(response);\n        this.LoadingData.next(false);\n      }, error => {\n        const errresp = error.error as ErrorResponse;\n        this.RecivedError.next(errresp);\n        this.LoadingData.next(false);\n      });\n  }\n\n\n  ConfirmEmail(UniqueToken: string) {\n    this.LoadingData.next(true);\n\n    const httpOptions = {\n      headers: new HttpHeaders({\n        Token: UniqueToken\n      })\n    };\n\n    this.http.post<ErrorResponse>(environment.ConfirmEmailUrl, null, httpOptions)\n      .subscribe(response => {\n        this.RecivedError.next(response);\n        this.LoadingData.next(false);\n      }, error => {\n        const errresp = error.error as ErrorResponse;\n        this.RecivedError.next(errresp);\n        this.LoadingData.next(false);\n      });\n  }\n\n  SendEmailConfirmEmail(EmailToSend: string) {\n    this.LoadingData.next(true);\n\n    const httpOptions = {\n      headers: new HttpHeaders({\n        Email: EmailToSend\n      })\n    };\n\n    this.http.post<ErrorResponse>(environment.ResendEmailUrl, null, httpOptions)\n      .subscribe(response => {\n        this.RecivedError.next(response);\n        this.LoadingData.next(false);\n      }, error => {\n        const errresp = error.error as ErrorResponse;\n        this.RecivedError.next(errresp);\n        this.LoadingData.next(false);\n      });\n  }\n\n  SendEmailResetPassword(EmailToSend: string) {\n    this.LoadingData.next(true);\n\n    const httpOptions = {\n      headers: new HttpHeaders({\n        Email: EmailToSend\n      })\n    };\n\n    this.http.post<ErrorResponse>(environment.SendEmailResetPassUrl, null, httpOptions)\n      .subscribe(response => {\n        this.RecivedError.next(response);\n        this.LoadingData.next(false);\n      }, error => {\n        const errresp = error.error as ErrorResponse;\n        this.RecivedError.next(errresp);\n        this.LoadingData.next(false);\n      });\n  }\n\n  SubmitNewPassword(UniqueToken: string, NewPass: string) {\n    this.LoadingData.next(true);\n\n    const httpOptions = {\n      headers: new HttpHeaders({\n        Token: UniqueToken,\n        NewPassword: encodeURI(NewPass)\n      })\n    };\n\n    this.http.post<ErrorResponse>(environment.ResetPasswordUrl, null, httpOptions)\n      .subscribe(response => {\n        this.RecivedError.next(response);\n        this.LoadingData.next(false);\n      }, error => {\n        const errresp = error.error as ErrorResponse;\n        this.RecivedError.next(errresp);\n        this.LoadingData.next(false);\n      });\n  }\n}\n\n\n\n","export class Ingredient{\n    constructor(public Name: string, public Amount: number){}\n}\n\nexport class ShoppingListResponse {\n  public Items: Ingredient[];\n  public Total: number;\n  public Offset: number;\n  public Limit: number;\n}\n\nexport class ErrorResponse {\n\n  public Error: BackendError;\n\n  constructor(Code: number, Message: string) {\n    this.Error = new BackendError(Code, Message);\n  }\n}\n\nexport class BackendError {\n\n  public Code: number;\n  public Message: string;\n\n  constructor(Code: number, Message: string) {\n    this.Code = Code;\n    this.Message = Message;\n  }\n}\n\nexport class Pagination {\n  public Total: number;\n  public Limit: number;\n  public Offset: number;\n  constructor(Total: number, Limit: number, Offset: number) {\n    this.Total = Total;\n    this.Limit = Limit;\n    this.Offset = Offset;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Ingredient } from '../shared/shared.model';\nimport { Subject } from 'rxjs';\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ShoppingListService {\n  IngredientSelected = new Subject<Ingredient>();\n  IngredientChanged = new Subject<Ingredient[]>();\n  IngredientsUpdated = new Subject<void>();\n  IngredientAdded = new Subject<Ingredient>();\n  IngredientUpdated = new Subject<Ingredient>();\n  IngredientDeleted = new Subject<Ingredient>();\n  IngredientClear = new Subject<void>();\n\n  CurrentSelectedItem: Ingredient;\n  Total: number;\n\n  private ingredients: Ingredient[] = [];\n\n  constructor() { }\n\n  GetIngredients() {\n    return this.ingredients.slice();\n  }\n\n  GetIngredientsLength() {\n    return this.ingredients.length;\n  }\n\n  SetIngredients(newing: Ingredient[]) {\n    this.ingredients = newing;\n    this.IngredientsUpdated.next();\n  }\n\n  SetPagination(Total: number, Limit: number, Offset: number) {\n    this.Total = Total;\n  }\n\n  AddNewItem(NewIngredient: Ingredient, Force: boolean) {\n    let FoundIngredient = this.ingredients.find((x) => x.Name === NewIngredient.Name);\n\n    if (FoundIngredient) {\n      FoundIngredient.Amount = FoundIngredient.Amount + NewIngredient.Amount;\n    } else {\n      FoundIngredient = NewIngredient;\n      if (this.ingredients.length < environment.ShoppingListPageSize || Force) {\n        this.ingredients.push(new Ingredient(NewIngredient.Name, NewIngredient.Amount));\n      }\n    }\n\n    this.IngredientAdded.next(FoundIngredient);\n    this.IngredientChanged.next(this.ingredients.slice());\n  }\n\n  UpdateSelectedItem(UpdatedIngredient: Ingredient) {\n    let FoundIngredient = this.ingredients.find((x) => x.Name === UpdatedIngredient.Name);\n\n    if (FoundIngredient && FoundIngredient !== this.CurrentSelectedItem) {\n      FoundIngredient.Name = UpdatedIngredient.Name;\n      FoundIngredient.Amount = FoundIngredient.Amount + UpdatedIngredient.Amount;\n      this.DeleteSelectedItem();\n    } else {\n      const index: number = this.ingredients.indexOf(this.CurrentSelectedItem);\n      if (index !== -1) {\n        this.ingredients[index] = UpdatedIngredient;\n        this.IngredientChanged.next(this.ingredients.slice());\n      }\n      FoundIngredient = this.CurrentSelectedItem;\n    }\n\n    this.IngredientUpdated.next(FoundIngredient);\n    this.CurrentSelectedItem = null;\n  }\n\n  DeleteSelectedItem() {\n\n    const index: number = this.ingredients.indexOf(this.CurrentSelectedItem);\n    if (index !== -1) {\n      this.ingredients.splice(index, 1);\n    }\n\n    this.IngredientDeleted.next(this.CurrentSelectedItem);\n    this.IngredientChanged.next(this.ingredients.slice());\n    this.CurrentSelectedItem = null;\n\n  }\n\n  ClearAll() {\n    this.ingredients = [];\n    this.CurrentSelectedItem = null;\n    this.IngredientChanged.next(this.ingredients.slice());\n    this.SetPagination(0, 0, 0);\n    this.IngredientClear.next();\n  }\n\n  SelectItemShopList(ingredient: Ingredient) {\n    this.CurrentSelectedItem = ingredient;\n    this.IngredientSelected.next(ingredient);\n  }\n\n  IsCurrentSelected(ingredient: Ingredient) {\n    return this.CurrentSelectedItem === ingredient;\n  }\n\n}\n"],"names":[],"sourceRoot":"webpack:///"}