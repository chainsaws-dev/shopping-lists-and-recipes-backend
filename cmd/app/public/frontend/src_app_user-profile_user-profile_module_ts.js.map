{"version":3,"file":"src_app_user-profile_user-profile_module_ts.js","mappings":"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","sources":["./src/app/shared/secure-image-pipe.pipe.ts","./src/app/user-profile/user-profile.component.ts","./src/app/user-profile/user-profile.component.html","./src/app/user-profile/user-profile.module.ts"],"sourcesContent":["import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Pipe, PipeTransform } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { environment } from 'src/environments/environment';\nimport { AuthService } from '../auth/auth.service';\n\n@Pipe({\n  name: 'secureImagePipe'\n})\nexport class SecureImagePipe implements PipeTransform {\n\n  constructor(\n    private http: HttpClient,\n    private auth: AuthService, // our service that provides us with the authorization token\n  ) {}\n\n  async transform(src: string): Promise<string> {\n    const token = this.auth.GetUserToken();\n    const headers = new HttpHeaders({\n      Auth: token,\n    ApiKey: environment.ApiKey});\n\n    try {\n    const imageBlob = await this.http.get(src, {headers, responseType: 'blob'}).toPromise();\n    const reader = new FileReader();\n    return new Promise((resolve, reject) => {\n      reader.onloadend = () => resolve(reader.result as string);\n      reader.readAsDataURL(imageBlob);\n    });\n  } catch {\n    return '/favicon.ico';\n  }\n\n  }\n\n}\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Subscription } from 'rxjs';\nimport { environment } from 'src/environments/environment';\nimport { User } from '../admin/users/users.model';\nimport { DataStorageService } from '../shared/data-storage.service';\nimport { ErrorResponse } from '../shared/shared.model';\n\n@Component({\n  selector: 'app-user-profile',\n  templateUrl: './user-profile.component.html',\n  styleUrls: ['./user-profile.component.css']\n})\nexport class UserProfileComponent implements OnInit, OnDestroy {\n\n  index: number;\n\n  UserToEdit: User;\n\n  TwoFactorEnabled: boolean;\n\n  SetTwoFactor: boolean;\n\n  IsLoading: boolean;\n  changepassword: boolean;\n\n  AuthUrl: string;\n  QrUrl: string;\n\n\n\n  private DataLoading: Subscription;\n  private RecivedErrorSub: Subscription;\n\n  private FetchUser: Subscription;\n  private SaveUser: Subscription;\n\n  private LinkUnlinkTFA: Subscription;\n\n  ShowMessage: boolean;\n  MessageType: string;\n  ResponseFromBackend: ErrorResponse;\n\n  constructor(\n    private activatedroute: ActivatedRoute,\n    private router: Router,\n    private datastore: DataStorageService) { }\n\n  ngOnDestroy(): void {\n    this.FetchUser.unsubscribe();\n    this.RecivedErrorSub.unsubscribe();\n    this.DataLoading.unsubscribe();\n    this.SaveUser.unsubscribe();\n    this.LinkUnlinkTFA.unsubscribe();\n  }\n\n  ngOnInit(): void {\n\n    this.AuthUrl = environment.GetAuthenticatorUrl;\n    this.QrUrl = environment.GetTOTPQRCodeUrl;\n\n    this.LinkUnlinkTFA = this.datastore.TwoFactorSub.subscribe(\n      (ThisUser) => {\n        this.SetUserAndTFA(ThisUser);\n      }\n    );\n\n    this.SaveUser = this.datastore.UserUpdateInsert.subscribe(\n      (ThisUser) => {\n        this.SetUserAndTFA(ThisUser);\n      }\n    );\n\n    this.FetchUser = this.datastore.CurrentUserFetch.subscribe(\n      (ThisUser) => {\n        this.SetUserAndTFA(ThisUser);\n      }\n    );\n\n    this.RecivedErrorSub = this.datastore.RecivedError.subscribe(\n      (response) => {\n\n        this.ShowMessage = true;\n        this.ResponseFromBackend = response;\n        setTimeout(() => this.ShowMessage = false, 5000);\n\n        if (response) {\n          switch (response.Error.Code) {\n            case 200:\n              this.MessageType = 'success';\n              break;\n            default:\n              this.MessageType = 'danger';\n              break;\n          }\n        }\n      }\n    );\n\n    this.DataLoading = this.datastore.LoadingData.subscribe(\n      (State) => {\n        this.IsLoading = State;\n      }\n    );\n\n    this.datastore.FetchCurrentUser();\n  }\n\n  SetUserAndTFA(ThisUser: User) {\n    this.UserToEdit = ThisUser;\n\n    if (this.UserToEdit) {\n      this.TwoFactorEnabled = this.UserToEdit.SecondFactor;\n    }\n  }\n\n  OnSaveClick(SubmittedForm: NgForm) {\n    if (SubmittedForm.valid) {\n\n      if (SubmittedForm.value.changepassword && SubmittedForm.value.newpassword.length === 0) {\n        return;\n      }\n\n      this.UserToEdit.Email = SubmittedForm.value.useremail;\n      this.UserToEdit.Name = SubmittedForm.value.username;\n      this.UserToEdit.Phone = SubmittedForm.value.userphone;\n\n      this.datastore.SaveCurrentUser(this.UserToEdit, SubmittedForm.value.changepassword, SubmittedForm.value.newpassword);\n\n    }\n  }\n\n  OnLinkTwoFactor(SubmittedForm: NgForm) {\n    if (SubmittedForm.valid) {\n      this.datastore.LinkTwoFactor(SubmittedForm.value.passkey, this.UserToEdit);\n    }\n  }\n\n  OnUnlinkTwoFactor() {\n\n    if (this.UserToEdit.SecondFactor) {\n      this.datastore.UnlinkTwoFactor(this.UserToEdit);\n    }\n\n  }\n}\n","<div class=\"text-center\">\n  <div class=\"spinner-border\" role=\"status\" *ngIf=\"IsLoading\">\n    <span class=\"visually-hidden-focusable\">Loading...</span>\n  </div>\n</div>\n<ngb-alert *ngIf=\"ShowMessage\" [type]=\"MessageType\" (close)=\"ShowMessage = false\">\n  {{ ResponseFromBackend.Error.Message }}</ngb-alert>\n\n<form #UserProfileForm=\"ngForm\" (ngSubmit)=\"OnSaveClick(UserProfileForm)\" *ngIf=\"UserToEdit\">\n  <div class=\"form-group\">\n    <div style=\"margin: 3px;\">\n      <h2>Profile</h2>\n\n      <div class=\"form-group\">\n        <label for=\"name\">Name</label>\n        <input type=\"text\" id=\"name\" placeholder=\"example\" class=\"form-control mb-1\" name=\"username\"\n          [ngModel]=\"UserToEdit.Name\" required>\n      </div>\n\n      <div class=\"form-group\">\n        <label for=\"email\">Email</label>\n        <input type=\"email\" id=\"email\" placeholder=\"exampe@example.com\" class=\"form-control mb-1\" name=\"useremail\"\n          [ngModel]=\"UserToEdit.Email\" required email>\n      </div>\n\n      <div class=\"form-group\">\n        <label for=\"phone\">Phone</label>\n        <input type=\"tel\" id=\"phone\" placeholder=\"+7 (965) 777-77-77\" class=\"form-control mb-1\" name=\"userphone\"\n          [ngModel]=\"UserToEdit.Phone\" pattern=\"^((8|\\+7)[\\- ]?)?(\\(?\\d{3,4}\\)?[\\- ]?)?[\\d\\- ]{5,10}$\">\n      </div>\n\n      <label for=\"newpassword\">Password</label>\n\n      <div class=\"input-group mb-3\">\n        <div class=\"input-group-text\">\n          <input class=\"form-check-input mt-0\" type=\"checkbox\" id=\"changepassword\" name=\"changepassword\"\n            [(ngModel)]=\"changepassword\">\n        </div>\n        <input type=\"password\" class=\"form-control\" id=\"newpassword\" name=\"newpassword\" placeholder=\"Enter new password\"\n          [disabled]=\"!changepassword\" ngModel>\n      </div>\n\n      <button class=\"btn btn-outline-primary\" type=\"submit\" [disabled]=\"UserProfileForm.invalid\">Save</button>\n      <button class=\"btn btn-outline-danger\" type=\"button\" routerLink=\"..\" style=\"margin-left: 3px;\">Cancel</button>\n\n    </div>\n  </div>\n</form>\n\n<div class=\"form-group\" *ngIf=\"UserToEdit && TwoFactorEnabled\">\n  <h2>Second factor enabled</h2>\n  <button class=\"btn btn-outline-danger\" type=\"button\" (click)=\"OnUnlinkTwoFactor()\">Disable</button>\n</div>\n\n<form #UserTwoFactorForm=\"ngForm\" (ngSubmit)=\"OnLinkTwoFactor(UserTwoFactorForm)\"\n  *ngIf=\"UserToEdit && !TwoFactorEnabled\">\n  <div class=\"form-group\">\n    <div style=\"margin: 3px;\">\n      <h2>Set second factor</h2>\n\n      <h4>1. Scan with <a [href]=\"AuthUrl\">Authenticator</a>:\n      </h4>\n\n      <img [src]=\"QrUrl | secureImagePipe | async\" alt=\"QR code\">\n\n      <h4>2. Enter the token:</h4>\n      <label for=\"newpassword\">Token</label>\n      <div class=\"input-group mb-3\">\n\n        <div class=\"input-group-text\">\n          <input type=\"checkbox\" id=\"enabletwofactor\" name=\"enabletwofactor\" [(ngModel)]=\"SetTwoFactor\" required>\n        </div>\n\n        <input type=\"text\" name=\"passkey\" inputmode=\"numeric\" pattern=\"[0-9]*\" autocomplete=\"one-time-code\"\n          class=\"form-control\" id=\"newpasskey\" placeholder=\"Token from Authenticator\" [disabled]=\"!SetTwoFactor\" ngModel\n          required minlength='6' ngbTooltip=\"Minimum 6 numbers\">\n      </div>\n\n      <button class=\"btn btn-outline-primary\" type=\"submit\">Save</button>\n    </div>\n  </div>\n</form>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { UserProfileComponent } from './user-profile.component';\nimport { RouterModule, Routes } from '@angular/router';\nimport { FormsModule } from '@angular/forms';\nimport { NgbAlertModule, NgbTooltipModule } from '@ng-bootstrap/ng-bootstrap';\nimport { SecureImagePipe } from '../shared/secure-image-pipe.pipe';\n\nconst routes: Routes = [\n  { path: '', component: UserProfileComponent, },\n];\n\n@NgModule({\n  declarations: [\n    UserProfileComponent,\n    SecureImagePipe,\n  ],\n  imports: [\n    CommonModule,\n    FormsModule,\n    NgbAlertModule,\n    RouterModule.forChild(routes),\n    NgbTooltipModule\n  ]\n})\nexport class UserProfileModule { }\n"],"names":[],"sourceRoot":"webpack:///"}